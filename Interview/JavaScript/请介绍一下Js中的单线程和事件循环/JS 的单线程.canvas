{
	"nodes":[
		{"id":"f2ced05a3ccbcde5","type":"text","text":"GUI 渲染线程\nJavaScript 引擎线程\n事件触发线程\n定时触发线程\n异步 http 请求线程","x":-484,"y":-181,"width":248,"height":141},
		{"id":"48422bb24760351d","type":"text","text":"JavaScript 引擎是多线程的，\n单线程是指 JS 引擎执行 JS 时只分配了一个线程给他执行，\n意思就是 JS 引擎分配了一个线程给 JavaScript 执行，\n也就是我们所说的单线程","x":-620,"y":40,"width":520,"height":120},
		{"id":"fa80c3543938b68f","type":"text","text":"浏览器内核是多线程，\n在内核控制下各线程相互配合以保持同步，\n一个浏览器通常由以下常驻线程组成","x":-580,"y":-320,"width":440,"height":100},
		{"id":"e81dd8b3253ef5c1","x":40,"y":20,"width":175,"height":60,"type":"text","text":"同步任务"},
		{"id":"dd3e7b49d51a6843","x":349,"y":-200,"width":793,"height":101,"type":"text","text":"由于 JavaScript 是单线程(一个Tab页内无论什么时候都只有一个 JS 线程在运行 JavaScript 程序)。\n所以我们需要依靠 任务队列 来进行 JavaScript 代码的执行。\nJS 引擎会一直等待着任务队列中任务的到来，然后执行任务。"},
		{"id":"2139fdca8cc78a3e","type":"text","text":"异步任务","x":1321,"y":20,"width":175,"height":60},
		{"id":"12e4cbf84faefaf7","x":-100,"y":260,"width":743,"height":91,"type":"text","text":"同步任务是指在主线程上排队执行的任务，只有前一个任务执行完毕，才能继续执行下一个任务，\n当我们打开网站时，网站的渲染过程，比如元素的渲染，其实就是一个同步任务"},
		{"id":"a063ec7a7f6aa15c","x":920,"y":180,"width":656,"height":171,"type":"text","text":"异步任务 则进入到 Event Table 并注册相对应的回调函数\n异步任务完成后，Event Table 会将这个回调函数移入任务队列\n\n异步任务是指不直接进入主线程，而进入任务队列的任务，\n只有任务队列通知主线程，某个异步任务可以执行了，该任务才会进入主线程，\n当我们打开网站时，像图片的加载、音乐的加载，其实就是一个异步任务。"},
		{"id":"c3f880b95bbac9c8","type":"text","text":"JS的单线程","x":621,"y":-580,"width":250,"height":60},
		{"id":"90263075059e9e64","x":2120,"y":-320,"width":250,"height":60,"type":"text","text":"Event Loop 的任务队列"},
		{"id":"307020107750da38","x":1680,"y":-46,"width":756,"height":192,"type":"text","text":"Event Loop 的任务队列放在浏览器的事件触发线程中，\n当 JS 引擎执行异步函数的时候，\n会将异步任务放在事件触发线程中，\n当对应的异步任务符合触发条件被触发时，\n事件触发线程会将异步任务添加到 JS 引擎中的主线程的队尾，等待执行。\n\n所以最后的结论是，我们所说的任务队列竟然是一个线程。\n\n然后，说回我们开头刚开始说过的定时器，大家基本也能猜出来了，它是由定时器线程控制的。\n因为 JavaScript 是单线程的，如果处于阻塞线程状态就会影响计时的准确，\n因此很有必要单独开一个线程用来计时。\n当使用 setTimeout 或 setInterval 时，\n它需要定时器线程计时，计时完成后就会将特定的事件推入事件队列中。"},
		{"id":"85368fbc85d49736","x":2780,"y":-46,"width":500,"height":192,"type":"text","text":"宏任务(MacroTask)和微任务(MicroTask)。\n一个事件循环回来后，\n开始去执行 Task Queue 中的 task，\n但是这里的 task 有优先级。\n所以优先执行 微任务(MicroTask) Queue 中的 task，\n执行完成在执行 宏任务(MacroTask) Queue 中的 task。"},
		{"id":"369a169d8bc45109","x":2641,"y":248,"width":139,"height":60,"type":"text","text":"宏任务"},
		{"id":"dac584de9beb1a9b","x":3280,"y":248,"width":143,"height":60,"type":"text","text":"微任务"},
		{"id":"3b618d12c96ea407","x":3229,"y":400,"width":245,"height":177,"type":"text","text":"MicroTask 包括：\nProcess.nextTick\nPromise.then\ncatch\nfinally\nMutationObserver"},
		{"id":"1ea3c8364fe9097b","x":2446,"y":400,"width":530,"height":68,"type":"text","text":"setTimeout、setInterval、I/O、UI Rendering 等都是宏任务。"},
		{"id":"72263c11ffd1cc88","x":636,"y":-320,"width":219,"height":50,"type":"text","text":"JS 的执行机制"}
	],
	"edges":[
		{"id":"8a4294bb090e711a","fromNode":"fa80c3543938b68f","fromSide":"bottom","toNode":"f2ced05a3ccbcde5","toSide":"top"},
		{"id":"d7d54e3894412e0b","fromNode":"f2ced05a3ccbcde5","fromSide":"bottom","toNode":"48422bb24760351d","toSide":"top"},
		{"id":"6184e09630481f39","fromNode":"c3f880b95bbac9c8","fromSide":"bottom","toNode":"fa80c3543938b68f","toSide":"top"},
		{"id":"1ffce14877b6bedd","fromNode":"72263c11ffd1cc88","fromSide":"bottom","toNode":"dd3e7b49d51a6843","toSide":"top"},
		{"id":"1af37af6255524e1","fromNode":"e81dd8b3253ef5c1","fromSide":"bottom","toNode":"12e4cbf84faefaf7","toSide":"top"},
		{"id":"1790dc68bb2ce3c2","fromNode":"dd3e7b49d51a6843","fromSide":"bottom","toNode":"e81dd8b3253ef5c1","toSide":"top"},
		{"id":"f1f807f353f2783e","fromNode":"dd3e7b49d51a6843","fromSide":"bottom","toNode":"2139fdca8cc78a3e","toSide":"top"},
		{"id":"c5f901c3130a1579","fromNode":"c3f880b95bbac9c8","fromSide":"bottom","toNode":"72263c11ffd1cc88","toSide":"top"},
		{"id":"bca1e8520eb1fa7b","fromNode":"2139fdca8cc78a3e","fromSide":"bottom","toNode":"a063ec7a7f6aa15c","toSide":"top"},
		{"id":"538aded3b7d297e7","fromNode":"c3f880b95bbac9c8","fromSide":"bottom","toNode":"90263075059e9e64","toSide":"top"},
		{"id":"ee053c0fa3f7330d","fromNode":"90263075059e9e64","fromSide":"bottom","toNode":"307020107750da38","toSide":"top"},
		{"id":"44a3fa84189d339f","fromNode":"90263075059e9e64","fromSide":"bottom","toNode":"85368fbc85d49736","toSide":"top"},
		{"id":"1b86c859e205eb47","fromNode":"85368fbc85d49736","fromSide":"bottom","toNode":"369a169d8bc45109","toSide":"top"},
		{"id":"42c0860276a15cc1","fromNode":"85368fbc85d49736","fromSide":"bottom","toNode":"dac584de9beb1a9b","toSide":"top"},
		{"id":"5a9f025f2ec4844c","fromNode":"369a169d8bc45109","fromSide":"bottom","toNode":"1ea3c8364fe9097b","toSide":"top"},
		{"id":"30223a3e40410598","fromNode":"dac584de9beb1a9b","fromSide":"bottom","toNode":"3b618d12c96ea407","toSide":"top"}
	]
}